DROP TABLE EMP;
CREATE TABLE EMP(
    ENAME VARCHAR(20),
    SAL NUMBER);

DROP TABLE SALGRADE;
CREATE TABLE SALGRADE(
    GRADE NUMBER,
    LOSAL NUMBER,
    HISAL NUMBER
    );
    
    
INSERT INTO EMP VALUES('SMITH', 800);
INSERT INTO EMP VALUES('ALLEN', 1600);
INSERT INTO EMP VALUES('WARD', 1250);
INSERT INTO EMP VALUES('JONES', 2975);
INSERT INTO EMP VALUES('MARTIN', 1250);
INSERT INTO EMP VALUES('BLAKE', 2850);
INSERT INTO EMP VALUES('CLARK', 2450);
INSERT INTO EMP VALUES('SCOTT', 3000);
INSERT INTO EMP VALUES('KING', 5000);
INSERT INTO EMP VALUES('KDB', 3000);


INSERT INTO SALGRADE VALUES(1,700,1200);
INSERT INTO SALGRADE VALUES(2,1201,1400);
INSERT INTO SALGRADE VALUES(3,1401,2000);
INSERT INTO SALGRADE VALUES(4,2001,3000);
INSERT INTO SALGRADE VALUES(5,3001,9999);


SELECT *
    FROM EMP
    WHERE SAL > (SELECT SAL
                    FROM EMP
                    WHERE ENAME = 'JONES');
                    
                    
SELECT AVG(SAL) 
    FROM EMP;
    
SELECT *
    FROM EMP
    WHERE SAL > (SELECT AVG(SAL)
                 FROM EMP);
    
                    

--홍길동과 다른지역에 사는사람들을 검색하세요

DROP TABLE EMP2;
CREATE TABLE EMP2(
    ENAME VARCHAR(20),
    RESIDENCE VARCHAR(20));
    
    
INSERT INTO EMP2 VALUES('김덕배', '서울');
INSERT INTO EMP2 VALUES('홍길동', '제주');
INSERT INTO EMP2 VALUES('장재영', '울산');
INSERT INTO EMP2 VALUES('오지영', '부산');
INSERT INTO EMP2 VALUES('강바울', '대전');

SELECT * 
    FROM EMP2
    WHERE RESIDENCE != '제주';
    
SELECT *
    FROM EMP2
    WHERE ENAME != '홍길동';

--홍길동과 동일한 업무를 하는 사람은 (영업,생산,지원)
DROP TABLE EMP3;
CREATE TABLE EMP3(
    ENAME VARCHAR(20),
    RESIDENCE_CODE VARCHAR(20),
    JOB VARCHAR(20)
    );

INSERT INTO EMP3 VALUES('김덕배', 1, '영업');
INSERT INTO EMP3 VALUES('홍길동', 2, '생산');
INSERT INTO EMP3 VALUES('장재영', 3, '지원');
INSERT INTO EMP3 VALUES('오지영', 4, '영업');
INSERT INTO EMP3 VALUES('강바울', 5, '생산');
INSERT INTO EMP3 VALUES('정충휘', 6, '생산');
INSERT INTO EMP3 VALUES('최재형', 3, '지원');
INSERT INTO EMP3 VALUES('이형규', 2, '생산');
INSERT INTO EMP3 VALUES('최민준', 5, '영업');
INSERT INTO EMP3 VALUES('황승빈', 1, '지원');



SELECT * FROM EMP3;

--홍길동과 다른지역에서 근무하면서 동일한 업무를 하는 사람을 검색하세요

SELECT *
    FROM EMP3
    WHERE RESIDENCE != (SELECT RESIDENCE
                        FROM EMP3
                        WHERE ENAME = '홍길동')
    AND JOB IN (SELECT JOB
                    FROM EMP3
                    WHERE ENAME = '홍길동');
                    
SELECT * 
    FROM EMP3
    WHERE RESIDENCE = '부산';
    
DROP TABLE NUMRSDC;
CREATE TABLE NUMRSDC(
    RESIDENCE VARCHAR(20),
    CODE NUMBER
    ); 
    
INSERT INTO NUMRSDC VALUES('서울', 1);
INSERT INTO NUMRSDC VALUES('부산', 2);
INSERT INTO NUMRSDC VALUES('대전', 3);
INSERT INTO NUMRSDC VALUES('경기', 4);
INSERT INTO NUMRSDC VALUES('광주', 5);
INSERT INTO NUMRSDC VALUES('제주', 6);

SELECT * FROM EMP3;
SELECT * FROM NUMRSDC;

SELECT *
    FROM EMP3
    WHERE RESIDENCE_CODE = (SELECT CODE
                                FROM NUMRSDC
                                WHERE RESIDENCE = '부산');
                                
                                
                                
DROP TABLE EMP;
CREATE TABLE EMP(
    EMPNO NUMBER,
    ENAME VARCHAR2(20),
    JOB VARCHAR2(20),
    SAL NUMBER,
    DEPTNO NUMBER
    );

INSERT INTO EMP VALUES(1,'SCOTT','MANAGER',2975,20);
INSERT INTO EMP VALUES(2,'JONES','ANALYST',1250,30);
INSERT INTO EMP VALUES(3,'KDB','PLAYER',2850,40);
INSERT INTO EMP VALUES(4,'MESSI','PLAYER',5000,20);
INSERT INTO EMP VALUES(5,'NALDO','SALESMAN',1500,30);
INSERT INTO EMP VALUES(6,'NEYMAR','PRESIDENT',950,40);
INSERT INTO EMP VALUES(7,'MBAPPE','PLAYER',1600,20);


DROP TABLE DEPT;
CREATE TABLE DEPT(
    DEPTNO NUMBER,
    DNAME VARCHAR(20),
    LOC VARCHAR(20)
    );
    
INSERT INTO DEPT VALUES(20,'영업', 'DALLAS');
INSERT INTO DEPT VALUES(30,'관리', 'DALLAS');
INSERT INTO DEPT VALUES(40,'지원', 'DALLAS');


SELECT *
    FROM EMP E, DEPT D
    WHERE E.DEPTNO = D.DEPTNO
        AND E.DEPTNO = 20
        AND E.SAL > (SELECT AVG(SAL)
                        FROM EMP);
                        
                        COMMIT;
                        
                        
--평균 급여보다 적은 직원 검색
SELECT *
    FROM EMP
    WHERE SAL < (SELECT AVG(SAL) 
                    FROM EMP);
--평균 급여보다 적은 영업부서 직원 검색
SELECT EMPNO,ENAME
    FROM EMP
    WHERE SAL < (SELECT AVG(SAL) 
                    FROM EMP)
      AND DEPTNO = (SELECT DEPTNO 
                        FROM DEPT
                        WHERE DNAME = '영업');
--평균 급여보다 적은 영업부서 직원의 상세 정보 검색
SELECT *
    FROM EMP
    WHERE SAL < (SELECT AVG(SAL) 
                    FROM EMP)
      AND DEPTNO = (SELECT DEPTNO 
                        FROM DEPT
                        WHERE DNAME = '영업');
                        
                        


DROP TABLE TAB03;
CREATE TABLE TAB03(
    ID NUMBER,
    DEPT VARCHAR(20),
    LOC VARCHAR(20),
    NAME VARCHAR(20)
    );

--인덱스 테이블    
INSERT INTO TAB03 VALUES(10,'경영','부산','호랑이');
INSERT INTO TAB03 VALUES(20,'영업','서울','코끼리');


SELECT * FROM TAB03;


--실행 결과가 여러개인 다중행 서브쿼리

SELECT *
    FROM EMP
    WHERE SAL IN (1000,2000,3000);
    
SELECT *
    FROM EMP
    WHERE SAL > ANY(2000);
    

SELECT *
    FROM EMP
    WHERE SAL IN (SELECT MAX(SAL)
                        FROM EMP
                        GROUP BY DEPTNO);
                        
SELECT MAX(SAL), DEPTNO
    FROM EMP
    GROUP BY DEPTNO
    ORDER BY DEPTNO;
    
--**********************important***************************--
--      > all                               < any               무조건 max 취급한다.
--ex) sal > all(100,200,300)            sal < any(100,200,300)          300선택
--그 외는 모두 min 취급.
--ex) sal < all (100,200,300)       sal > any(100,200,300) 모두 min       100선택


drop table empl;
create table empl(
    sal number);
    
insert into empl values(50);
insert into empl values(100);
insert into empl values(150);
insert into empl values(200);
insert into empl values(250);
insert into empl values(300);
insert into empl values(350);

select * from empl;


--1
select *
    from empl
    where sal > all(100,200,300);
--2    
select *
    from empl
    where sal < any(100,200,300);
--3        
select *
    from empl
    where sal < all(100,200,300);
--4    
select *
    from empl
    where sal > any(100,200,300);
    
    

select *
    from emp
    where sal < any(select sal
                        from emp
                        where deptno = 30);
                        
                        
select *
    from emp
    where sal > any (select sal
                        from emp
                        where deptno = 30);
    

select *
    from emp
    where sal < all (select sal
                        from emp
                        where deptno = 30);
                        
                        
select * 
    from emp
    where sal > all (select sal
                        from emp
                        where deptno = 30);
                        
                        
--생물학과 물리과 화학과 3명씩

--학생들은 국어, 수학, 영어에 대한 점수를 갖고있다.

--화학과 학생들의 3과목 총점과 동일한 학생들을 전부 출력

drop table student;
create table student(
    name varchar(20),
    math_score number,
    korean_score number,
    english_score number,
    dept varchar(20),
    grade number
    );


insert into student values('장재영',70,65,50,'생물학과',1);
insert into student values('최재형',90,85,40,'물리학과',2);
insert into student values('김준호',70,70,70,'화학과',1);
insert into student values('황승빈',50,65,40,'생물학과',1);
insert into student values('김준영',90,80,40,'물리학과',2);
insert into student values('오지영',60,95,80,'화학과',1);
insert into student values('박진우',30,55,70,'생물학과',2);
insert into student values('차민석',80,75,80,'물리학과',1);
insert into student values('이형규',40,25,30,'화학과',1);

select * 
    from student
    where (math_score + english_score + korean_score) in (select (math_score + english_score + korean_score) 
                                                             from student
                                                             where dept = '화학과')
                                                             --210,235,95
    and dept != '화학과';

    
select (math_score + english_score + korean_score) 
    from student
    where dept = '화학과';
    
    
    
--화학과 학생들과 같은 학년에서 총점이 동일한 학생들을 출력.쌍으로 해결..

select * 
    from student
    where ( (math_score + english_score + korean_score), grade ) 
    in (select (math_score + english_score + korean_score), grade
            from student
            where dept = '화학과')
    and dept != '화학과';




DROP TABLE EMP;
CREATE TABLE EMP(
    ENAME VARCHAR(20),
    SAL NUMBER);
    
   
INSERT INTO EMP VALUES('SMITH', 10);
INSERT INTO EMP VALUES('ALLEN', 20);
INSERT INTO EMP VALUES('WARD', 30);
INSERT INTO EMP VALUES('JONES', 40);
INSERT INTO EMP VALUES('MARTIN', 50);

select * from emp;

select * from (select * 
                from emp
                where sal > 30 ) t1; -- 서브쿼리보단 inline view 라고 한다. from 안에 쿼리가 들어갈때.
-- WITH를 통해 VIEW 화 시킨다
-- WITH부터 명령문이 끝나는 ; 까지가 유효범위이다.
with
t1 as( select * 
                from emp
                where sal > 30 ),
t2 as ( select *
        from emp
        where sal < 30)
select * from t1,t2;




