


drop table tab01;
create table tab01(
    name varchar2(20),
    gno number, --fk(foreigner key)
    sal number
);
drop table tab02;
create table tab02(
    gno number, --pk(primary key)
    grade varchar(20)
    );
    
    
INSERT INTO TAB01 VALUES('이순신', 1, 100);
INSERT INTO TAB01 VALUES('안중근', 2, 200);
INSERT INTO TAB01 VALUES('세종대', 3, 300);
INSERT INTO TAB01 VALUES('윤봉길', 4, 400);

INSERT INTO TAB02 VALUES(1, '호랑이');
INSERT INTO TAB02 VALUES(2, '코끼리');

SELECT *
    FROM TAB01, TAB02; --교차JOIN --TSQL문법 --실전코드
    --동격
SELECT *
    FROM TAB01 CROSS JOIN TAB02; --ANSI문법 --권장코드
    
-- EX1

SELECT *
    FROM TAB01, TAB02
    WHERE TAB01.GNO = TAB02.GNO; --등가조인 equi join
    
--등가 조인에는 fk와 pk가 필수.


--EX2
 
SELECT *
    FROM TAB01 T1, TAB02 T2 --별명으로 사용하자.
    WHERE T1.GNO = T2.GNO;
    
--EX3

SELECT T1.NAME, T1.GNO, T1.SAL, T2.GNO, T2.GRADE
    FROM TAB01 T1, TAB02 T2
    WHERE T1.GNO = T2.GNO;
 


--EX4

SELECT NAME, T1.GNO, SAL, GRADE
    FROM TAB01 T1, TAB02 T2
    WHERE T1.GNO = T2.GNO;
    
    --별명을 사용하면 별명형태로 간다.
    


--EX5

SELECT NAME, T1.GNO, SAL, GRADE
    FROM TAB01 T1 INNER JOIN TAB02 T2 
    ON T1.GNO = T2.GNO;    --INNER JOIN으로 할때 WHERE 대신 ON
    
    
--EX6
SELECT NAME, T1.GNO, SAL, GRADE
    FROM TAB01 T1, TAB02 T2
    WHERE T1.GNO = T2.GNO
    AND ROWNUM <= 2;
    
SELECT NAME, T1.GNO, SAL, GRADE
    FROM TAB01 T1, TAB02 T2
    WHERE T1.GNO = T2.GNO --조인조건
    AND SAL >= 200; --일반조건
    
    
    
    
DROP TABLE EMP;
CREATE TABLE EMP(
    ENAME VARCHAR(20),
    SAL NUMBER);

DROP TABLE SALGRADE;
CREATE TABLE SALGRADE(
    GRADE NUMBER,
    LOSAL NUMBER,
    HISAL NUMBER
    );
    
    
INSERT INTO EMP VALUES('SMITH', 800);
INSERT INTO EMP VALUES('ALLEN', 1600);
INSERT INTO EMP VALUES('WARD', 1250);
INSERT INTO EMP VALUES('JONES', 2975);
INSERT INTO EMP VALUES('MARTIN', 1250);
INSERT INTO EMP VALUES('BLAKE', 2850);
INSERT INTO EMP VALUES('CLARK', 2450);
INSERT INTO EMP VALUES('SCOTT', 3000);
INSERT INTO EMP VALUES('KING', 5000);

INSERT INTO SALGRADE VALUES(1,700,1200);
INSERT INTO SALGRADE VALUES(2,1201,1400);
INSERT INTO SALGRADE VALUES(3,1401,2000);
INSERT INTO SALGRADE VALUES(4,2001,3000);
INSERT INTO SALGRADE VALUES(5,3001,9999);



SELECT *
    FROM EMP E, SALGRADE S
    WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;
    





--PK와 FK가 한테이블에 있을때 셀프 조인 사용


DROP TABLE EMP;
CREATE TABLE EMP(
    ID NUMBER, --PK
    NAME VARCHAR(20),
    MGR NUMBER --FK
    );
    
INSERT INTO EMP VALUES(1,'호랑이1',NULL);
INSERT INTO EMP VALUES(2,'호랑이2',1);
INSERT INTO EMP VALUES(3,'호랑이3',2);
INSERT INTO EMP VALUES(4,'호랑이4',1);

SELECT E1.ID, E1.NAME, E1.MGR,
       E2.ID AS MGR_ID,
       E2.NAME AS MGR_NAME
    FROM EMP E1, EMP E2
    WHERE E1.MGR = E2.ID;

SELECT E1.ID, E1.NAME, E1.MGR,
       E2.ID AS MGR_ID,
       E2.NAME AS MGR_NAME
    FROM EMP E1 JOIN EMP E2
    ON E1.MGR = E2.ID;
    
    
DROP TABLE TAB01;
CREATE TABLE TAB01(
    ID NUMBER,
    NAME VARCHAR(20));
    
DROP TABLE TAB02;
CREATE TABLE TAB02(
    ID NUMBER,
    AGE NUMBER);
    
    
INSERT INTO TAB01 VALUES(1,'호랑이1');
INSERT INTO TAB01 VALUES(2,'호랑이2');
INSERT INTO TAB01 VALUES(3,'호랑이3');
INSERT INTO TAB01 VALUES(4,'호랑이4');
INSERT INTO TAB01 VALUES(5,'호랑이5');

INSERT INTO TAB02 VALUES(3,100);
INSERT INTO TAB02 VALUES(4,200);
INSERT INTO TAB02 VALUES(5,300);
INSERT INTO TAB02 VALUES(6,400);
INSERT INTO TAB02 VALUES(7,500);


--EX1 등가조인
SELECT *
    FROM TAB01, TAB02
    WHERE TAB01.ID = TAB02.ID;
    
    
    
--EX2
SELECT *
    FROM TAB01, TAB02
    WHERE TAB01.ID = TAB02.ID(+); --왼쪽의 테이블 내용은 전부 출력하세요 (OUTTER JOIN)
    
--EX3    
SELECT *
    FROM TAB01, TAB02
    WHERE TAB01.ID(+) = TAB02.ID; --오른쪽 테이블 내용은 전부 출력하고 왼쪽은 걸러서 출력
    
    
--EX4
SELECT *
    FROM TAB01 LEFT JOIN TAB02
    USING(ID);
    
--EX5
SELECT *
    FROM TAB01 RIGHT JOIN TAB02
    USING(ID);
